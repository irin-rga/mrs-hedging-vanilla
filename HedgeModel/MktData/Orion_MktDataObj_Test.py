# Auto-generated code from nxpy-autocodegen
from datetime import date
from nxpy import pro

from crossasset.crossasset_base import CrossAssetContext
from crossasset.helpers.data import Data as DataHelper
from crossasset.helpers.matrix import Matrix as MatrixHelper


with CrossAssetContext(pro.Application(), warning=pro.ApplicationWarning()):
    ndxdivdatacurrdt = DataHelper.from_dict(
        {
            "DATE": [
                45583.0,
                45611.0,
                45646.0,
                45737.0,
                45828.0,
                45919.0,
                46010.0,
                46191.0,
            ],
            "DIVIDENDYIELD": [
                -0.008151533659328714,
                0.00202920878474917,
                0.0029265015963802457,
                -0.00011533112436267455,
                0.0012943027695772838,
                0.002199411243677672,
                0.0015124338073287972,
                0.00039625799609426074,
            ],
        }
    )
    markitycdatacurrdt = DataHelper.from_dict(
        {
            "DATE": [
                45566.0,
                45583.0,
                45611.0,
                45646.0,
                45737.0,
                45828.0,
                45919.0,
                46010.0,
                46191.0,
            ],
            "DISCOUNTFACTOR": [
                1.0,
                0.997713,
                0.994015,
                0.989732,
                0.979805,
                0.971239,
                0.963513,
                0.95625,
                0.942379,
            ],
        }
    )
    ndxivmatrixcurrdt = MatrixHelper.from_list_of_lists(
        [45583.0, 45611.0, 45646.0, 45737.0, 45828.0, 45919.0, 46010.0, 46191.0],
        [0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1.0, 1.05, 1.1, 1.2, 1.3, 1.4, 1.5],
        [
            [
                0.826879,
                0.680108,
                0.548043,
                0.424754,
                0.305251,
                0.245916,
                0.190197,
                0.161715,
                0.177095,
                0.235472,
                0.291903,
                0.342939,
                0.389232,
            ],
            [
                0.657996,
                0.553074,
                0.458908,
                0.371694,
                0.288996,
                0.249388,
                0.212691,
                0.18461,
                0.174554,
                0.195078,
                0.228177,
                0.260902,
                0.2915,
            ],
            [
                0.562416,
                0.478457,
                0.403333,
                0.334186,
                0.269427,
                0.23883,
                0.210435,
                0.186769,
                0.172355,
                0.175067,
                0.195758,
                0.219239,
                0.242143,
            ],
            [
                0.469311,
                0.40663,
                0.350901,
                0.300161,
                0.253456,
                0.231702,
                0.211424,
                0.193401,
                0.178962,
                0.165893,
                0.170708,
                0.182884,
                0.197035,
            ],
            [
                0.421605,
                0.370394,
                0.325163,
                0.284387,
                0.247374,
                0.230322,
                0.214448,
                0.200093,
                0.187778,
                0.171695,
                0.168048,
                0.172712,
                0.181113,
            ],
            [
                0.393432,
                0.349244,
                0.310433,
                0.275715,
                0.244502,
                0.230216,
                0.216924,
                0.204803,
                0.19411,
                0.178251,
                0.170937,
                0.170883,
                0.175199,
            ],
            [
                0.3674,
                0.329603,
                0.296614,
                0.26734,
                0.241262,
                0.229394,
                0.218359,
                0.208238,
                0.199152,
                0.184653,
                0.17577,
                0.172327,
                0.172989,
            ],
            [
                0.341521,
                0.309908,
                0.282498,
                0.258356,
                0.236998,
                0.227303,
                0.218272,
                0.209929,
                0.202317,
                0.189496,
                0.180205,
                0.174542,
                0.172106,
            ],
        ],
    )
    spxivmatrixcurrdt = MatrixHelper.from_list_of_lists(
        [45583.0, 45611.0, 45646.0, 45737.0, 45828.0, 45919.0, 46010.0, 46191.0],
        [0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1.0, 1.05, 1.1, 1.2, 1.3, 1.4, 1.5],
        [
            [
                0.953103,
                0.787468,
                0.646137,
                0.473625,
                0.292159,
                0.217288,
                0.148067,
                0.122752,
                0.158574,
                0.244186,
                0.318221,
                0.381887,
                0.43893,
            ],
            [
                0.701133,
                0.591494,
                0.475368,
                0.359608,
                0.257581,
                0.213465,
                0.166292,
                0.12827,
                0.124887,
                0.165824,
                0.209237,
                0.247403,
                0.281726,
            ],
            [
                0.609615,
                0.506926,
                0.408643,
                0.315539,
                0.23672,
                0.20011,
                0.161411,
                0.128793,
                0.117472,
                0.142312,
                0.178586,
                0.210842,
                0.239317,
            ],
            [
                0.486975,
                0.407423,
                0.336336,
                0.273843,
                0.217115,
                0.188867,
                0.160581,
                0.135758,
                0.119679,
                0.117567,
                0.138173,
                0.160195,
                0.180106,
            ],
            [
                0.426447,
                0.360265,
                0.30261,
                0.253617,
                0.210379,
                0.18789,
                0.164622,
                0.14253,
                0.125441,
                0.112472,
                0.121867,
                0.137258,
                0.152337,
            ],
            [
                0.389208,
                0.332337,
                0.284947,
                0.244739,
                0.208406,
                0.189643,
                0.169678,
                0.149902,
                0.132524,
                0.114245,
                0.11571,
                0.12614,
                0.138012,
            ],
            [
                0.364584,
                0.314833,
                0.273383,
                0.238305,
                0.206534,
                0.190163,
                0.172998,
                0.155763,
                0.139775,
                0.11913,
                0.114937,
                0.121016,
                0.130271,
            ],
            [
                0.333528,
                0.29334,
                0.260113,
                0.231919,
                0.20481,
                0.191238,
                0.177216,
                0.163219,
                0.149976,
                0.128359,
                0.119154,
                0.119691,
                0.124025,
            ],
        ],
    )
    spxdivdatacurrdt = DataHelper.from_dict(
        {
            "DATE": [
                45583.0,
                45611.0,
                45646.0,
                45737.0,
                45828.0,
                45919.0,
                46010.0,
                46191.0,
            ],
            "DIVIDENDYIELD": [
                0.0031829291024914096,
                0.005265987044588998,
                0.0071907502892823525,
                0.004979180837585964,
                0.005178796963925092,
                0.00627239223402777,
                0.005995523214333116,
                0.0045954185560713665,
            ],
        }
    )
    from crossasset.market_data.dividend import Dividend as Market_Data_Dividend

    ndxdivcurrdt = Market_Data_Dividend.dividend_yields(
        nowdate=date.fromisoformat("2024-10-01"),
        currency="USD",
        rate_or_dividend=ndxdivdatacurrdt,
        basis="ACT/365.25",
    )

    from crossasset.market_data.yld import Yld as Market_Data_Yld

    markityccurrdt = Market_Data_Yld.discount_factors(
        interp="CUBIC SPLINE",
        currency="USD",
        data=markitycdatacurrdt,
        basis="Act/365.25",
    )

    from crossasset.market_data.eq_vol import EqVol as Market_Data_Eq_Vol

    ndxvolcurrdt = Market_Data_Eq_Vol.eq_volatility(
        nowdate=date.fromisoformat("2024-10-01"),
        currency="USD",
        volatility_basis="ACT/365.25",
        data=ndxivmatrixcurrdt,
        scaling_factor=1.0,
        strike_definition="Relative",
        strike_extrapolation="FLAT",
        fix_calendar="NONE",
        fix_convention="NONE",
        notice_period="0BD",
        discrete_dividend_convention="STRIKE",
        spot_price=19773.3,
        atm_convention="CALL50",
        strike_interpolation="LINEAR STRIKE",
    )

    spxvolcurrdt = Market_Data_Eq_Vol.eq_volatility(
        nowdate=date.fromisoformat("2024-10-01"),
        currency="USD",
        volatility_basis="ACT/365.25",
        data=spxivmatrixcurrdt,
        scaling_factor=1.0,
        strike_definition="Relative",
        strike_extrapolation="FLAT",
        fix_calendar="NONE",
        fix_convention="NONE",
        notice_period="0BD",
        discrete_dividend_convention="STRIKE",
        spot_price=5708.75,
        atm_convention="CALL50",
        strike_interpolation="LINEAR STRIKE",
    )

    spxdivcurrdt = Market_Data_Dividend.dividend_yields(
        nowdate=date.fromisoformat("2024-10-01"),
        currency="USD",
        rate_or_dividend=spxdivdatacurrdt,
        basis="ACT/365.25",
    )
